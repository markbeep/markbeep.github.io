<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Hello, I'm Mark</title><link>https://markc.su/posts/</link><description>Recent content in Posts on Hello, I'm Mark</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 14 Mar 2022 08:11:22 +0100</lastBuildDate><atom:link href="https://markc.su/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>3D Raycasting</title><link>https://markc.su/posts/raycasting/</link><pubDate>Mon, 14 Mar 2022 08:11:22 +0100</pubDate><guid>https://markc.su/posts/raycasting/</guid><description>Becoming a Coding Train Fanboy&amp;nbsp;¶ Lately I&amp;rsquo;ve been binging a lot of YouTube again and for a while now I&amp;rsquo;ve been recommended The Coding Train videos, but I&amp;rsquo;ve never cared enough to open one of his 40min videos, until a week ago when I discovered how great his coding projects are. Upon watching the introduction of one of his approximating Pi videos I decided it would be fun to try and code the program, before watching the video.</description></item><item><title>Learning the Nimble Nim</title><link>https://markc.su/posts/learning_nim/</link><pubDate>Sun, 09 May 2021 14:38:03 +0200</pubDate><guid>https://markc.su/posts/learning_nim/</guid><description>Table of Contents&amp;nbsp;¶ What is Nim? Why? The Surprises Variables Switch Cases For Loops Procedures Arrays Objects Conclusion What is Nim?&amp;nbsp;¶ Nim does a good job explaining what it is in a short way on their website:
Nim is a statically typed compiled systems programming language. It combines successful concepts from mature languages like Python, Ada and Modula.
But that quote only covers a tiny portion of what Nim really is.</description></item><item><title>Making the Hangman Solver Faster</title><link>https://markc.su/posts/hangman/</link><pubDate>Fri, 16 Apr 2021 18:45:56 +0200</pubDate><guid>https://markc.su/posts/hangman/</guid><description>The What?&amp;nbsp;¶ A few years ago when I was starting with Python we used to sometimes play little hangman games in class. I thought it to be a really good practice to write a little program, that could tell me what character I should guess next. That&amp;rsquo;s where I started with my hangman solver. I can put in the word I&amp;rsquo;m looking for, the characters that are not allowed and the language (English or German) it should search words for.</description></item><item><title>Getting Started with Hugo</title><link>https://markc.su/posts/getting_started/</link><pubDate>Thu, 15 Apr 2021 18:24:16 +0200</pubDate><guid>https://markc.su/posts/getting_started/</guid><description>Welcome&amp;nbsp;¶ Welcome to the grand opening of my new website. This is the very first post on here.
This website is mainly to test out new stuff in the direction of web development, as that is a direction I don&amp;rsquo;t currently have a lot of experience with. Additionally, a plan I have in mind is to write quick summaries for topics I&amp;rsquo;m currently learning about. This would be useful for myself to look back at when learning for exams and it might even be interesting for some people to read about the topics.</description></item></channel></rss>